const user = userResponse.data.data.users_by_pk;
        if (!user) {
            return res.status(404).json({ error: 'User not found' });
        }

        let newBalance = user.balance;
        if (type === 'deposit') {
            newBalance += amount;
        } else if (type === 'withdrawal') {
            if (user.balance < amount) {
                return res.status(400).json({ error: 'Insufficient funds' });
            }
            newBalance -= amount;
        } else {
            return res.status(400).json({ error: 'Invalid transaction type' });
        }

        // Update user balance and create transaction
        await axios.post(HASURA_URL, {
            query: `
                mutation ($id: Int!, $newBalance: numeric!, $amount: numeric!, $type: String!) {
                    update_users_by_pk(pk_columns: {id: $id}, _set: {balance: $newBalance}) {
                        id
                    }
                    insert_transactions(objects: {user_id: $id, amount: $amount, type: $type}) {
                        returning {
                            id
                        }
                    }
                }
            `,
            variables: { id: userId, newBalance, amount, type }
        }, {
            headers: { 'x-hasura-admin-secret': HASURA_SECRET }
        });

        res.json({ message: 'Transaction successful' });